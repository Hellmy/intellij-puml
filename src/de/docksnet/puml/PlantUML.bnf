
{
  parserClass="de.docksnet.puml.parser.PumlParser"
  stubParserClass="de.docksnet.puml.MyGeneratedParserUtilBase"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Puml"
  psiImplClassSuffix="Impl"
  psiPackage="de.docksnet.puml.psi"
  psiImplPackage="de.docksnet.puml.psi.impl"

  elementTypeHolderClass="de.docksnet.puml.psi.PumlTypes"
  elementTypeClass="de.docksnet.puml.psi.PumlElementType"
  tokenTypeClass="de.docksnet.puml.psi.PumlTokenType"

  // operators
  COLON                 = ":"
  PAR_LEFT              = "("
  PAR_RIGHT             = ")"
  STEREOTYPE_START      = "<<"
  STEREOTYPE_END        = ">>"
  DASH                  = "-"
  ANGLE_BRACKET_RIGHT   = ">"
}

pumlFile ::= UML_START entry_* UML_END

private entry_ ::= (actorEntry|usecaseEntry|connectionEntry|COMMENT|EOL)

actorEntry ::= actorDef [AS ID] [stereotype] EOL {pin=1}
private actorDef ::= (ACTOR actorIdDefinition | ':' actorIdDefinition ':' | ACTOR ':' actorIdDefinition ':')
actorIdDefinition ::= <<rememberActorID>> ID

usecaseEntry ::= usecaseDef [AS usecaseAlias] [stereotype] EOL {pin=1}
private usecaseDef ::= (USECASE usecaseIdDefinition | '(' usecaseIdDefinition ')' | USECASE '(' usecaseIdDefinition ')')
usecaseIdDefinition ::= <<rememberUsecaseID>> ID
usecaseAlias ::= ('(' ID ')' | ID | MULTI_LINE_STRING)

connectionEntry ::= actorStatement arrow usecaseStatement [':' LABEL] EOL {pin=1}
actorStatement ::= ( actorRefOrDef | ':' actorRefOrDef ':')
private actorRefOrDef ::= (<<isKnownActorID>> actorIdReference | actorIdDefinition )
actorIdReference ::= ID
usecaseStatement ::= '(' usecaseRefOrDef ')'
private usecaseRefOrDef ::= (<<isKnownUsecaseID>> usecaseIdReference | usecaseIdDefinition )
usecaseIdReference ::= ID
arrow ::= '-'+ '>'

stereotype ::= '<<' STRING '>>'
